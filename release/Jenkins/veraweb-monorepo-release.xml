<?xml version='1.0' encoding='UTF-8'?>
<maven2-moduleset plugin="maven-plugin@2.10">
  <actions/>
  <description>&lt;p&gt;âš  DO NOT USE YET!!!&lt;/p&gt;&#xd;
&#xd;
&lt;h2&gt;Regular builds of VerA.web with Sonar&lt;/h2&gt;&#xd;
&lt;p&gt;Installs to one proper and one Docker system.&lt;/p&gt;&#xd;
&lt;p&gt;Upon maven release, also tags and exports Docker stuff.&lt;/p&gt;</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Run.Update:veraweb</permission>
      <permission>hudson.model.Item.Workspace:veraweb</permission>
      <permission>hudson.scm.SCM.Tag:veraweb</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:veraweb</permission>
      <permission>hudson.model.Item.Build:veraweb</permission>
      <permission>hudson.model.Item.Read:veraweb</permission>
      <permission>hudson.model.Item.Cancel:veraweb</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:veraweb</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:veraweb</permission>
      <permission>hudson.model.Item.Configure:veraweb</permission>
      <permission>hudson.model.Item.Release:veraweb</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>VWJENKINS_PROPER_INSTALL_STAGE</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>mit/ohne</string>
              <string>po</string>
              <string>(keine)</string>
              <string>stadtmuenchen</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>VWJENKINS_DOCKER_INSTALL_STAGE</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>dev</string>
              <string>test</string>
              <string>ref</string>
              <string>(keine)</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkins.plugins.lockableresources.RequiredResourcesProperty plugin="lockable-resources@1.7">
      <labelName>mr_veraweb</labelName>
    </org.jenkins.plugins.lockableresources.RequiredResourcesProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.12">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git+ssh://maven@evolvis.org/scmrepos/git/veraweb/veraweb.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <browser class="hudson.plugins.git.browser.GitWeb">
      <url>https://evolvis.org/plugins/scmgit/cgi-bin/gitweb.cgi?p=veraweb/veraweb.git</url>
    </browser>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.LocalBranch>
        <localBranch>master</localBranch>
      </hudson.plugins.git.extensions.impl.LocalBranch>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(Inherit From Job)</jdk>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec># alle Viertelstunde
H/15 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <rootModule>
    <groupId>org.evolvis.veraweb</groupId>
    <artifactId>veraweb-parent</artifactId>
  </rootModule>
  <goals>-Platex -Prelease -PoA -e clean install</goals>
  <aggregatorStyleBuild>true</aggregatorStyleBuild>
  <incrementalBuild>false</incrementalBuild>
  <ignoreUpstremChanges>false</ignoreUpstremChanges>
  <archivingDisabled>true</archivingDisabled>
  <siteArchivingDisabled>false</siteArchivingDisabled>
  <fingerprintingDisabled>false</fingerprintingDisabled>
  <resolveDependencies>false</resolveDependencies>
  <processPlugins>false</processPlugins>
  <mavenValidationLevel>-1</mavenValidationLevel>
  <runHeadless>false</runHeadless>
  <disableTriggerDownstreamProjects>false</disableTriggerDownstreamProjects>
  <blockTriggerWhenBuilding>true</blockTriggerWhenBuilding>
  <settings class="jenkins.mvn.DefaultSettingsProvider"/>
  <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
  <reporters>
    <hudson.maven.reporters.MavenMailer>
      <recipients>veraweb-commits@lists.evolvis.org</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
      <perModuleEmail>false</perModuleEmail>
    </hudson.maven.reporters.MavenMailer>
  </reporters>
  <publishers>
    <hudson.plugins.sonar.SonarPublisher plugin="sonar@2.1">
      <jdk>(Inherit From Job)</jdk>
      <branch></branch>
      <language></language>
      <mavenOpts></mavenOpts>
      <jobAdditionalProperties></jobAdditionalProperties>
      <settings class="jenkins.mvn.DefaultSettingsProvider"/>
      <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
      <usePrivateRepository>false</usePrivateRepository>
    </hudson.plugins.sonar.SonarPublisher>
  </publishers>
  <buildWrappers>
    <org.jvnet.hudson.plugins.m2release.M2ReleaseBuildWrapper plugin="m2release@0.14.0">
      <scmUserEnvVar></scmUserEnvVar>
      <scmPasswordEnvVar></scmPasswordEnvVar>
      <releaseEnvVar>IS_M2RELEASEBUILD</releaseEnvVar>
      <releaseGoals>-Platex -Prelease -PoA -Dresume=false release:prepare release:perform -DpreparationGoals=&quot;clean install&quot; -e</releaseGoals>
      <dryRunGoals>-Platex -Prelease -PoA -Dresume=false -DdryRun=true release:prepare -e</dryRunGoals>
      <selectCustomScmCommentPrefix>false</selectCustomScmCommentPrefix>
      <selectAppendHudsonUsername>false</selectAppendHudsonUsername>
      <selectScmCredentials>false</selectScmCredentials>
      <numberOfReleaseBuildsToKeep>1</numberOfReleaseBuildsToKeep>
    </org.jvnet.hudson.plugins.m2release.M2ReleaseBuildWrapper>
  </buildWrappers>
  <prebuilders/>
  <postbuilders>
    <hudson.tasks.Shell>
      <command>PS4=&quot;(ci-busyapps)++ &quot;
set -ex
if test x&quot;$VWJENKINS_PROPER_INSTALL_STAGE&quot; = x&quot;(keine)&quot;; then
	: not installing to a proper system
else
	oa=true
	tomcat=8
	case $VWJENKINS_PROPER_INSTALL_STAGE in
	(mit/ohne)
		oa=false
		hostbase=veraweb-mit.lan.tarent.de
		hostoa=veraweb-mit-oa.lan.tarent.de
		hostohne=veraweb-ohne.lan.tarent.de
		tomcat=8
		;;
	(po)
		hostbase=veraweb-po.lan.tarent.de
		hostoa=$hostbase
		;;
	(stadtmuenchen)
		hostbase=veraweb-stadtmuenchen.lan.tarent.de
		hostoa=
		tomcat=7
		;;
	(*)
		echo &gt;&amp;2 &quot;E: stage &apos;$VWJENKINS_PROPER_INSTALL_STAGE&apos; unknown&quot;
		exit 1
		;;
	esac

	ssh root@$hostbase &quot;
		PS4=&apos;(${hostbase%%.*})+++ &apos;
		set -ex
		(service tomcat$tomcat stop || :)
	    &quot;
	$oa || ssh root@$hostohne &quot;
		PS4=&apos;(${hostohne%%.*})+++ &apos;
		set -ex
		(service tomcat$tomcat stop || :)
	    &quot;
	test -z &quot;$hostoa&quot; || \
	    scp vwoa/target/vw-online-registration.jar root@$hostoa:/service/vwoa/
	sleep 5
	ssh root@$hostbase &quot;
		PS4=&apos;(${hostbase%%.*})+++ &apos;
		set -ex
		psql -U veraweb -h 127.0.0.1 veraweb
		rm -rf /var/lib/tomcat$tomcat/webapps/v*
	    &quot; &lt;core/files/upgrade.sql
	$oa || ssh root@$hostohne &quot;
		PS4=&apos;(${hostohne%%.*})+++ &apos;
		set -ex
		psql -U veraweb -h 127.0.0.1 veraweb
		rm -rf /var/lib/tomcat$tomcat/webapps/v*
	    &quot; &lt;core/files/upgrade.sql
	scp core/target/veraweb.war vwor/target/vwor.war \
	    root@$hostbase:/var/lib/tomcat$tomcat/webapps/
	$oa || scp core/target/veraweb.war vwor/target/vwor.war \
	    root@$hostohne:/var/lib/tomcat$tomcat/webapps/
	ssh root@$hostbase &quot;
		PS4=&apos;(${hostbase%%.*})+++ &apos;
		set -ex
		service tomcat$tomcat start
	    &quot;
	$oa || ssh root@$hostohne &quot;
		PS4=&apos;(${hostohne%%.*})+++ &apos;
		set -ex
		service tomcat$tomcat start
	    &quot;
	sleep 5
	test -z &quot;$hostoa&quot; &amp;&amp; sleep 5 || ssh root@$hostoa &quot;
		PS4=&apos;(${hostoa%%.*})+++ &apos;
		set -ex
		cd /service/vwoa
		rm -f vwoa.jar
		mv vw-online-registration.jar vwoa.jar
		svc -t /service/vwoa
		sleep 5
		svstat /service/vwoa
	    &quot;
	: finished installing to a proper system
fi
#git gc # rsync time of packs is rather high, so best to do this only rarely
rsync --delete-before -zavPHK &quot;$PWD/&quot; root@veraweb-tools.lan.tarent.de:/root/jenkins-tmp/monorepo/
vsn=
if test x&quot;$IS_M2RELEASEBUILD&quot; = x&quot;true&quot;; then
	vsn=$(xmlstarlet sel -N pom=http://maven.apache.org/POM/4.0.0 \
	    -T -t -c /pom:project/pom:version &lt;pom.xml)
	case x$vsn in
	(x)
		echo &gt;&amp;2 &quot;E: could not determine POM version&quot;
		exit 1
		;;
	(x*SNAPSHOT*)
		echo &gt;&amp;2 &quot;W: not tagging snapshot&quot;
		vsn=
		;;
	(*\&apos;*|*/*)
		echo &gt;&amp;2 &quot;E: invalid POM version: $vsn&quot;
		exit 1
		;;
	(*)
		echo &gt;&amp;2 &quot;I: tagging release $vsn&quot;
		;;
	esac
else
	: no Maven release build
fi
ssh -l root veraweb-tools.lan.tarent.de &quot;
	PS4=&apos;(veraweb-tools)+++ &apos;
	set -ex
	exec env PS4=&apos;(veraweb-tools)++++ &apos; \
	    /root/jenkins-tmp/monorepo/release/Docker/mkdocker.sh &apos;$vsn&apos;
    &quot;
if test x&quot;$VWJENKINS_DOCKER_INSTALL_STAGE&quot; = x&quot;(keine)&quot;; then
	: not installing to a Docker system
else
	case $VWJENKINS_DOCKER_INSTALL_STAGE in
	(dev|test|ref) ;;
	(*)
		echo &gt;&amp;2 &quot;E: stage &apos;$VWJENKINS_DOCKER_INSTALL_STAGE&apos; unknown&quot;
		exit 1
		;;
	esac
	ssh-agent sh -c &quot;
		PS4=\&quot;(ci-busyapps)+++ \&quot;
		set -ex
		ssh-add &lt;/dev/null
		ssh -Al root veraweb-tools.lan.tarent.de \&quot;
			PS4=&apos;(veraweb-tools)++++ &apos;
			set -ex
			cd /srv/environment
			git fetch origin
			git checkout origin/master
			git branch -D master
			git checkout -b master origin/master
			if test x&apos;$vsn&apos; = x&apos;&apos;; then :; else
				git tag -a -m &apos;tag VerA.web release $vsn&apos; &apos;$vsn&apos;
				git push --tags origin
			fi
			env PS4=&apos;(veraweb-tools)+++++ &apos; ./dockerdeploy.sh $VWJENKINS_DOCKER_INSTALL_STAGE
		    \&quot;
	    &quot;
	: finished installing to a Docker system
fi
exit 0</command>
    </hudson.tasks.Shell>
  </postbuilders>
  <runPostStepsIfResult>
    <name>SUCCESS</name>
    <ordinal>0</ordinal>
    <color>BLUE</color>
    <completeBuild>true</completeBuild>
  </runPostStepsIfResult>
</maven2-moduleset>
