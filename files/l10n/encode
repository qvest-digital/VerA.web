#!/bin/mksh
#-
# Copyright © 2015
#	Thorsten “mirabilos” Glaser <t.glaser@tarent.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.
#-
# Convert files from UTF-8 to Java .properties (\uNNNN) escapes. Bad
# input is handled as CP1252 (Latin1) instead and warned about. Does
# not handle SMP Unicode (> U+FFFD) yet.

export LC_ALL=C.UTF-8
set -U

nl='
'
set -A cp -- \
	0x20AC -1     0x201A 0x0192 0x201E 0x2026 0x2020 0x2021 \
	0x02C6 0x2030 0x0160 0x2039 0x0152 -1     0x017D -1     \
	-1     0x2018 0x2019 0x201C 0x201D 0x2022 0x2013 0x2014 \
	0x02DC 0x2122 0x0161 0x203A 0x0153 -1     0x017E 0x0178 \
        0x00A0 0x00A1 0x00A2 0x00A3 0x00A4 0x00A5 0x00A6 0x00A7 \
        0x00A8 0x00A9 0x00AA 0x00AB 0x00AC 0x00AD 0x00AE 0x00AF \
        0x00B0 0x00B1 0x00B2 0x00B3 0x00B4 0x00B5 0x00B6 0x00B7 \
        0x00B8 0x00B9 0x00BA 0x00BB 0x00BC 0x00BD 0x00BE 0x00BF \
        0x00C0 0x00C1 0x00C2 0x00C3 0x00C4 0x00C5 0x00C6 0x00C7 \
        0x00C8 0x00C9 0x00CA 0x00CB 0x00CC 0x00CD 0x00CE 0x00CF \
        0x00D0 0x00D1 0x00D2 0x00D3 0x00D4 0x00D5 0x00D6 0x00D7 \
        0x00D8 0x00D9 0x00DA 0x00DB 0x00DC 0x00DD 0x00DE 0x00DF \
        0x00E0 0x00E1 0x00E2 0x00E3 0x00E4 0x00E5 0x00E6 0x00E7 \
        0x00E8 0x00E9 0x00EA 0x00EB 0x00EC 0x00ED 0x00EE 0x00EF \
        0x00F0 0x00F1 0x00F2 0x00F3 0x00F4 0x00F5 0x00F6 0x00F7 \
        0x00F8 0x00F9 0x00FA 0x00FB 0x00FC 0x00FD 0x00FE 0x00FF


cd "$(dirname "$0")"
set -A files -- "$@"
(( ${#files[*]} == 0 )) && set -A files -- *.resource
integer x y
typeset -Uui16 -Z7 c
typeset -i1 oc

print -ru2 "I: ${#files[*]} files to convert"
for fn in "${files[@]}"; do
	if [[ ! -s $fn ]]; then
		print -ru2 "W: file $fn does not exist, skipping"
		continue
	fi
	print -nru2 "I: converting file $fn..."
	os=
	ln=0
	while IFS= read -ra ia; do
		let ++ln
		typeset -Uui16 -Z7 ia[*]
		y=${#ia[*]}
		[[ " ${ia[*]} " = *" 16#EF"[89A-F]* ]] && print -ru2 -- W: \
		    not UTF-8 in file "$fn" line $ln, treating as CP1252/Latin1
		x=-1
		while (( ++x < y )); do
			(( ((c = ia[x]) & 0xFF80) == 0xEF80 )) && \
			    if (( (c = cp[c & 0x7F]) == -1 )); then
				print -ru2 E: invalid input in file "$fn" \
				    line $ln char $((x + 1)), aborting
				exit 1
			fi
			if (( c == 0x0A || (c >= 0x20 && c <= 0x7E) )); then
				(( oc = c ))
				os+=${oc#1#}
			else
				os+=\\u${c#16#}
			fi
		done
		os+=$nl
	done <"$fn"
	print -nr -- "$os" >"$fn"
	print -ru2 "I: converting file $fn... done"
done
print -ru2 I: all done
