<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.evolvis.veraweb</groupId>
		<artifactId>veraweb-parent</artifactId>
		<version>1.8.62-SNAPSHOT</version>
	</parent>
	<artifactId>veraweb-systemtest</artifactId>
	<name>VerA.web systemtest module</name>
	<dependencies>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility-groovy</artifactId>
			<version>${awaitility.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy.modules.http-builder</groupId>
			<artifactId>http-builder</artifactId>
			<version>${groovy-http-builder.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-collections</groupId>
					<artifactId>commons-collections</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons-collections.version}</version>
		</dependency>
		<dependency>
			<groupId>org.gebish</groupId>
			<artifactId>geb-spock</artifactId>
			<version>${geb.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<version>${selenium.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
	</dependencies>
	<build>
		<testSourceDirectory>src/test/groovy/</testSourceDirectory>
		<resources>
			<!-- Copy core Dockerfile -->
			<resource>
				<directory>../release/Docker/core</directory>
				<targetPath>${project.build.directory}/dockerbuild/core</targetPath>
			</resource>
			<!-- Copy core war -->
			<resource>
				<directory>../core/target</directory>
				<targetPath>${project.build.directory}/dockerbuild/core</targetPath>
				<includes>
					<include>veraweb.war</include>
				</includes>
			</resource>
			<!-- Copy REST API Dockerfile -->
			<resource>
				<directory>../release/Docker/vwor</directory>
				<targetPath>${project.build.directory}/dockerbuild/vwor</targetPath>
			</resource>
			<!-- Copy REST API war -->
			<resource>
				<directory>../vwor/target</directory>
				<targetPath>${project.build.directory}/dockerbuild/vwor</targetPath>
				<includes>
					<include>vwor.war</include>
				</includes>
			</resource>
			<!-- Copy httpd Dockerfile -->
			<resource>
				<directory>../release/Docker/httpd</directory>
				<targetPath>${project.build.directory}/dockerbuild/httpd</targetPath>
			</resource>
			<!-- Copy LDAP Dockerfile -->
			<resource>
				<directory>../release/Docker/ldap</directory>
				<targetPath>${project.build.directory}/dockerbuild/ldap</targetPath>
			</resource>
		</resources>
		<plugins>
			<!-- Copy JDBC driver to build directory of core docker image -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-jdbc-core</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.postgresql</groupId>
									<artifactId>postgresql</artifactId>
									<version>${postgresql.version}</version>
									<type>jar</type>
									<outputDirectory>${project.build.directory}/dockerbuild/core</outputDirectory>
									<destFileName>postgresql-jdbc4.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy-jdbc-vwor</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.postgresql</groupId>
									<artifactId>postgresql</artifactId>
									<version>${postgresql.version}</version>
									<type>jar</type>
									<outputDirectory>${project.build.directory}/dockerbuild/vwor</outputDirectory>
									<destFileName>postgresql-jdbc4.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Build docker images -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${maven.dockerfile.version}</version>
				<executions>
					<!-- Build core docker image -->
					<execution>
						<id>build core image</id>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<contextDirectory>${project.build.directory}/dockerbuild/core</contextDirectory>
							<repository>veraweb-core-dev</repository>
						</configuration>
					</execution>
					<!-- Build REST API docker image -->
					<execution>
						<id>build REST API image</id>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<contextDirectory>${project.build.directory}/dockerbuild/vwor</contextDirectory>
							<repository>veraweb-rest-api-dev</repository>
						</configuration>
					</execution>
					<!-- Uncomment to also build httpd docker image -->
					<!--<execution>
                        <id>build httpd image</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <contextDirectory>${project.build.directory}/dockerbuild/httpd</contextDirectory>
                            <repository>${docker.registry}/veraweb-httpd</repository>
                        </configuration>
                    </execution>-->
					<!-- Uncomment to also build LDAP docker image -->
					<!--<execution>
                        <id>build LDAP image</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <contextDirectory>${project.build.directory}/dockerbuild/ldap</contextDirectory>
                            <repository>${docker.registry}/veraweb-ldap</repository>
                        </configuration>
                    </execution>-->
				</executions>
				<dependencies>
					<dependency>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
						<version>${activation.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- Run containers via docker compose -->
			<plugin>
				<groupId>com.dkanejs.maven.plugins</groupId>
				<artifactId>docker-compose-maven-plugin</artifactId>
				<version>${maven.docker-compose.version}</version>
				<executions>
					<execution>
						<id>up</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>up</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/docker-compose.yml</composeFile>
							<detachedMode>true</detachedMode>
						</configuration>
					</execution>
					<execution>
						<id>down</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>down</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/docker-compose.yml</composeFile>
							<removeVolumes>true</removeVolumes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Compile groovy tests -->
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>${maven.gmavenplus.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Execute tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>system tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*Test.class</include>
								<include>**/*Spec.class</include>
							</includes>
							<systemPropertyVariables>
								<geb.build.reportsDir>target/geb-reports</geb.build.reportsDir>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Disable surefire as system tests are executed by failsafe -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.webdriverextensions</groupId>
				<artifactId>webdriverextensions-maven-plugin</artifactId>
				<version>${webdriverextensions.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>install-drivers</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<drivers>
						<driver>
							<name>chromedriver</name>
							<version>${chromedriver.version}</version>
							<platform>mac</platform>
						</driver>
						<driver>
							<name>chromedriver</name>
							<version>${chromedriver.version}</version>
							<platform>linux</platform>
						</driver>
						<driver>
							<name>chromedriver</name>
							<version>${chromedriver.version}</version>
							<platform>windows</platform>
						</driver>
					</drivers>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
