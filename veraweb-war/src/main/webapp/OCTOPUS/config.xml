<?xml version="1.0" encoding="utf-8"?>
<!--!DOCTYPE tcModuleConfig SYSTEM "../tcModuleConfig.dtd"-->

<!--
	Octopus config.xml

	Hauptkonfiguration
-->
<tcModuleConfig>
	<!-- textuelle Beschreibung des Moduls -->
	<description>AA - VerA.web</description>

	<!-- Die in diesem Element enthaltenen param-Elemente erlauben, gewisse Aspekte von VerA.web zu steuern. -->
	<params>
		<!-- ************************* -->
		<!-- *** Octopus-Steuerung *** -->
		<!-- ************************* -->
		<!-- Diese Parameter steuern das Zusammenspiel mit dem Application Server und sollten allgemein nicht geändert werden. -->
		<!-- der relative Pfad der Antwort-Templates; "templates/". -->
		<param name="paths.templateRoot" value="templates/"/>
		<!-- die Java-Klasse, in der Informationen zum angemeldeten Benutzer gehalten werden; "de.tarent.octopus.PersonalConfigAA". -->
		<param name="personalConfigClass" value="de.tarent.octopus.PersonalConfigAA"/>
		<!-- der Dateiname der Konfigurationsdatei für den Datenbankzugriff; "dblayer.properties". -->
		<param name="dblayer" value="dblayer.properties"/>
		<!-- die Vorgabe für den Rückgabeformattyp der Octopus-Tasks; "velocity". -->
		<param name="defaultResponseType" value="velocity"/>
		<!-- die Vorgabe für den Content Type der Rückgaben der Octopus-Tasks; "text/html;charset=UTF-8". -->
		<param name="defaultContentType" value="text/html;charset=UTF-8"/>
		<!-- die Vorgabe für die Zeichenkodierung der Rückgaben der Octopus-Tasks; "UTF-8". -->
		<param name="defaultEncoding" value="UTF-8"/>
		<!-- der Name des Skripts für die Darstellung von Fehlerseiten; "error" referenziert bei obigen Einstellungen "templates/velocity/error.vm". -->
		<param name="defaultErrorDescriptionName" value="error"/>
		<!-- wird die Online-Anmeldung auch ausgeführt -->
		<param name="online-registration.activated" value="true"/>

		<!-- ************************************************ -->
		<!-- *** Automatisches Kopieren von Personendaten *** -->
		<!-- ************************************************ -->
		<!-- Folgender Parameter steuert das automatische Kopieren von Personendaten.
		     Hierbei sind die Werte "all" (alle Adress- und Kommunikationsdaten),
		     "name" (nur die Namendaten), "address" (nur die Adressdaten) und "contact"
		     (nur die Kommunikationsdaten) zulässig.
		-->
		<!-- kopieren der lateinischen Daten in die anderen Zeichensätze. -->
		<param name="copyPersonDataLatinToExtra" value="all"/>

		<!-- ******************************************************************* -->
		<!-- *** Automatisches Erstellen von Personen-Dokumenttyp-Freitexten *** -->
		<!-- ******************************************************************* -->
		<!-- Folgende Parameter steuern, welche personalisierte Freitexte zu Dokumenttypen automatisch erzeugt werden. Hierbei sind die Werte "all" (alle Freitexte werden erzeugt, gegebenenfalls überschrieben), "new" (nur nicht vorhandene Freitexte werden erzeugt), "flag:99" (wie "new", aber nur bei Flag 99) und "none" (keine Freitexte werden erzeugt) zulässig. -->
		<!-- erzeugen beim Neuanlegen von Personen. -->
		<param name="createDoctypeOnNewPerson" value="new"/>
		<!-- erzeugen beim Speichern von Personen. -->
		<param name="createDoctypeOnSavePerson" value="new"/>
		<!-- Folgende Parameter steuern, wie automatisch erzeugte Freitexte zu Dokumenttypen gefüllt werden; sie sind Listen von Einträgen, die entweder Bezeichner aus der Menge (firstname, lastname, title, salutation, function, company, street, city, zipcode, country, pobox, poboxzipcode, suffix1, suffix2, phone, fax, mobile, email, url) sind, die je nach Dokumenttyp in den verschiedenen Adressen und Zeichensätzen interpretiert werden, oder freie Texte. Freie Texte können eines der Präfixe "BOTH:", "PREV:" oder "NEXT:" haben; diese bewirken, dass der freie Text nur übernommen wird, wenn beide angrenzenden Felder, nur das vorherige oder nur das folgende nicht-leer sind. -->
		<!-- das Muster für das Erzeugen des Hauptpersonenfreitexts. -->
		<param name="createDoctypeFormat" type="array">
			<value>salutation</value>
			<value>PREV:
</value>
			<value>title</value>
			<value>BOTH: </value>
			<value>firstname</value>
			<value>BOTH: </value>
			<value>lastname</value>
		</param>
		<!-- das Muster für das Erzeugen des Partnerpersonfreitexts. -->
		<param name="createDoctypeFormatPartner" type="array">
			<value>salutation</value>
			<value>PREV:
</value>
			<value>title</value>
			<value>BOTH: </value>
			<value>firstname</value>
			<value>BOTH: </value>
			<value>lastname</value>
		</param>

		<!-- ***************** -->
		<!-- *** Sonstiges *** -->
		<!-- ***************** -->
		<!-- das Präfix, das ein führendes + einer Telefon- oder Faxnummer ersetzen soll. -->
		<param name="phoneAreacode" value="+"/>
		<!-- der Eingangszeichensatz bei einer Zeichensatzumwandlung. -->
		<param name="encoding.input" value="ISO-8859-1"/>
		<!-- der Ausgangszeichensatz bei einer Zeichensatzwandlung. -->
		<param name="encoding.output" value="UTF-8"/>
	</params>

	<!-- **************** -->
	<!-- *** Logging: *** -->
	<!-- **************** -->
	<!-- Die in diesem Element enthaltenen param-Elemente erlauben, das Modul-eigene Logging zu steuern.

		 Neben dem Logging, das der tarent-octopus selber betreibt, gibt es ein Modul-internes
		 Logging. Dieses verwendet die Log4J-API, die dynamischer konfigurierbar ist als die
		 java.util.logging-API, die vom tarent-octopus benutzt wird.

		 Dieses Element wird mittels des Log4J-DOMConfigurators eingelesen. In ihm können nun
		 Log-Kategorien Level-Filter und Ausgabeschnittstellen zugeordnet werden. Details zu
		 den verfügbaren Optionen finden sich in der Log4J-Dokumentation, siehe
		 http://logging.apache.org/log4j/docs/

		 Das Modul veraweb nutzt im eigenen Code Kategorien, die nach dem vollständigen Klassennamen
		 (inklusive Package-Pfad) bezeichnet sind, so dass insbesondere die (Ober-)Kategorien
		 "de.tarent.aa.veraweb", "de.tarent.dblayer" und "de.tarent.octopus" interessant sind.

		 Ältere eingebundene Bibliotheken benutzen zum Teil Kategorien, die passend zu dem Inhalt
		 des Log-Kommentars bezeichnet sind, so dass die Kategorien "WORKER", "SQL" und "ERROR"
		 noch von Interesse sind.

		 Bei der Initialisierung des Moduls veraweb werden FileAppender der Kategorien "SQL",
		 "WORKER", "ERROR", "de.tarent.dblayer" und "de.tarent.aa.veraweb" manipuliert:
		 Falls der enthaltene Dateiname nicht leer ist, jedoch keinen Pfad enthält, wird
		 als Dateipfad das Verzeichnis "log" innerhalb des Modulverzeichnisses vorangesetzt.
	 -->
	<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/" debug="true">
		<category name="WORKER" additivity="false">
			<level value="WARN"/>
			<appender-ref ref="FileLog"/>
		</category>

		<category name="SQL" additivity="false">
			<level value="WARN"/>
			<appender-ref ref="FileLog"/>
		</category>

		<category name="ERROR">
			<level value="ALL"/>
			<appender-ref ref="ErrorLog"/>
		</category>

		<category name="de.tarent.dblayer" additivity="false">
			<level value="WARN"/>
			<appender-ref ref="FileLog"/>
		</category>

		<category name="de.tarent.aa.veraweb" additivity="false">
			<level value="ALL"/>
			<appender-ref ref="FileLog"/>
		</category>

		<category name="de.tarent.octopus" additivity="false">
			<level value="WARN"/>
			<appender-ref ref="FileLog"/>
		</category>

		<appender name="Console" class="org.apache.log4j.ConsoleAppender">
			<param name="Target" value="System.out"/>
			<layout class="org.apache.log4j.PatternLayout">
				<param name="ConversionPattern" value="%-5p %c{1} - %m%n"/>
			</layout>
		</appender>

		<appender name="FileLog" class="org.apache.log4j.RollingFileAppender">
			<param name="MaxFileSize" value="1500KB"/>
			<param name="MaxBackupIndex" value="8"/>
			<param name="File" value="veraweb.log"/>
			<layout class="org.apache.log4j.PatternLayout">
				<param name="ConversionPattern" value="[%5p] %d{dd.MM.yy HH:mm:ss} (%F:%L) - %m%n"/>
			</layout>
		</appender>

		<appender name="ErrorLog" class="org.apache.log4j.RollingFileAppender">
			<param name="MaxFileSize" value="5MB"/>
			<param name="MaxBackupIndex" value="8"/>
			<param name="File" value="error.log"/>
			<layout class="org.apache.log4j.PatternLayout">
				<param name="ConversionPattern" value="[%5p] %d{dd.MM.yy HH:mm:ss} (%F:%L) - %m%n"/>
			</layout>
		</appender>

		<appender name="Socket" class="org.apache.log4j.net.SocketAppender">
			<param name="RemoteHost" value="localhost"/>
			<param name="Port" value="4445"/>
		</appender>

		<root>
			<priority value="INFO"/>
		</root>
	</log4j:configuration>

	<include file="config_import_export.xml" />
	<include file="config_database_pools.xml" />
	<include file="config_ldap_access.xml" />
	<include file="config_mail_server.xml" />
	<include file="config_worker_tasks.xml" />
</tcModuleConfig>
