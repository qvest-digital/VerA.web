<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx
  		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
  		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
  		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-3.1.xsd">

	<!-- configure Selenium-Hooks -->
	<bean class="de.tarent.aa.veraweb.cucumber.env.hook.HTMLSaver" />
	<bean class="de.tarent.aa.veraweb.cucumber.env.hook.ResultZipper" />
	<bean class="de.tarent.aa.veraweb.cucumber.env.hook.ScreenshotTaker" />
	<bean class="de.tarent.aa.veraweb.cucumber.env.hook.SeleniumCloser" />

	<!-- Configure GlobalConfig -->
	<bean id="globalConfig" class="de.tarent.aa.veraweb.cucumber.env.GlobalConfig" scope="singleton">
		<property name="serverHost" value="${selenium.server.host}" />
		<property name="port" value="${selenium.server.port}" />
		<property name="browserMode" value="${selenium.mode}" />
		<property name="htmlPath" value="${html.path}" />
		<property name="screenshotEmbedded" value="${screenshot.embedded}" />
		<property name="screenshotPath" value="${screenshot.path}" />
		<property name="resultContentPath" value="${result.content.path}" />
		<property name="resultContentZipPath" value="${result.content.zip.path}" />
		<property name="sleepTime" value="10" />
		<property name="sleepUnit" value="SECONDS" />
		<property name="newSessionPerFeature" value="${new.session.per.feature}" />
		<property name="verawebBaseUrl" value="${veraweb.baseUrl}" />
	</bean>

	<bean id="seleniumFactory" class="de.tarent.aa.veraweb.cucumber.env.SeleniumFactory" />
	<bean id="seleniumInstance" class="org.openqa.selenium.WebDriver"
		factory-bean="seleniumFactory" factory-method="buildRemote" scope="singleton">
		<constructor-arg index="0" value="${selenium.server.host}" />
		<constructor-arg index="1" value="${selenium.server.port}" />
		<constructor-arg index="2" value="${selenium.mode}" />
		<constructor-arg index="3" value="#{globalConfig.sleepTime}" />
		<constructor-arg index="4" value="#{globalConfig.sleepUnit}" />
	</bean>

	<bean class="de.tarent.aa.veraweb.selenium.AdvancedWebDriver">
		<constructor-arg ref="seleniumInstance" />
	</bean>



	<!-- You can put your spring-code below! -->

	<context:component-scan base-package="de.tarent.aa.veraweb" annotation-config="true" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${veraweb.db.driver}" />
		<property name="url" value="${veraweb.db.url}" />
		<property name="username" value="${veraweb.db.username}" />
		<property name="password" value="${veraweb.db.password}" />
	</bean>

	<bean class="com.googlecode.flyway.core.Flyway">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="jpa-persistence" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />


</beans>
