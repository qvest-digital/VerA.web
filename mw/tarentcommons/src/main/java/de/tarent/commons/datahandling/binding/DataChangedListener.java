/*
 * tarent commons,
 * a set of common components and solutions
 * Copyright (c) 2006-2007 tarent GmbH
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License,version 2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301, USA.
 *
 * tarent GmbH., hereby disclaims all copyright
 * interest in the program 'tarent commons'
 * Signature of Elmar Geese, 14 June 2007
 * Elmar Geese, CEO tarent GmbH.
 */

package de.tarent.commons.datahandling.binding;

/**
 * Listener for data events.
 *
 * <p>For GUI applications: There is no policy, from which thread the event dispatching over this interface should be done.
 * So this event may be generated by an background data loading thread. I this case, swing must not be performed in the listener method directly.
 * You should use {@see java.awt.EventQueue.invokeLater()} for doing this. Or use the BindingManager, who cares about that.</p>
 *
 */
public interface DataChangedListener {
    

    /**
     * Listener method which is called on DataChang Events.
     */
    public void dataChanged(DataChangedEvent e);

}